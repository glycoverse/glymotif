% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/quantify-motifs.R
\name{quantify_motifs}
\alias{quantify_motifs}
\title{Quantify motifs in an experiment}
\usage{
quantify_motifs(exp, motifs, alignments = NULL, ignore_linkages = FALSE)
}
\arguments{
\item{exp}{A \code{\link[glyexp:experiment]{glyexp::experiment()}} object. Before using this function,
you should preprocess the data using the \code{glyclean} package.
For glycoproteomics data, the data should be aggregated to the
"gfs" (glycoforms with structures) level using \code{glyclean::aggregate()}.
Also, please make sure that the \code{glycan_structure} column is present in the \code{var_info} table,
as not all glycoproteomics identification softwares provide this information.
The column can be a \code{\link[glyrepr:glycan_structure]{glyrepr::glycan_structure()}} vector,
or a character vector of glycan structure strings supported by \code{\link[glyparse:auto_parse]{glyparse::auto_parse()}}.

For glycoproteomics data, the \code{var_info} table must contain:
\itemize{
\item \code{protein}: protein ID
\item \code{protein_site}: the glycosite position on the protein
The unique combination of \code{protein} and \code{protein_site} determines a glycosite.
}}

\item{motifs}{A character vector of motif names, glycan structure strings,
or a 'glyrepr_structure' object.
For glycan structure strings, all formats supported by \code{\link[glyparse:auto_parse]{glyparse::auto_parse()}} are accepted,
including IUPAC-condensed, WURCS, GlycoCT, and others.}

\item{alignments}{A character vector specifying alignment types for each motif.
Can be a single value (applied to all motifs) or a vector of the same length as motifs.}

\item{ignore_linkages}{A logical value. If \code{TRUE}, linkages will be ignored in the comparison.}
}
\value{
A new \code{\link[glyexp:experiment]{glyexp::experiment()}} object for motif quantifications with "traitomics" type.
The new experiment contains the following columns in the \code{var_info} table:
\itemize{
\item \code{variable}: variable ID
\item \code{motif}: motif name
}

For glycoproteomics data, with additional columns:
\itemize{
\item \code{protein}: protein ID
\item \code{protein_site}: the glycosite position on the protein
}

Other columns in the \code{var_info} table (e.g. \code{gene}) are retained if they have "many-to-one"
relationship with glycosites (unique combinations of \code{protein}, \code{protein_site}).
That is, each glycosite cannot have multiple values for these columns.
\code{gene} is a common example, as a glycosite can only be associate with one gene.
Descriptions about glycans are not such a column, as a glycosite can have multiple glycans,
thus having multiple descriptions.
Columns not having this relationship with glycosites will be dropped.
Don't worry if you cannot understand this logic,
as long as you know that this function will try its best to preserve useful information.

\code{sample_info} and \code{meta_data} are not modified,
except that the \code{exp_type} field of \code{meta_data} is set to "traitomics".
}
\description{
This function quantifies motifs from glycomic or glycoproteomic profiles.
For glycomics data, it calculates the motif quantifications directly.
For glycoproteomics data, each glycosite is treated as a separate glycome,
and motif quantifications are calculated in a site-specific manner.

The function takes a \code{glyexp::experiment()} and returns a new \code{glyexp::experiment()}
with motif quantifications. Instead of containing the quantification of each glycan
on each glycosite in each sample, the new experiment contains the quantification
of each motif on each glycosite in each sample (for glycoproteomics data) or
the motif quantification in each sample (for glycomics data).

Due to the unified data structure of \code{glyexp::experiment()},
the returned motif experiment can be passed to downstream \code{glycoverse}
functions like \code{glystats::gly_ttest()} for further statistical analysis.
Also, you can use \code{as_tibble()} to convert it to a "tidy" tibble for custom analysis.
}
\seealso{
\code{\link[=count_motifs]{count_motifs()}}
}
